!function e(i,s,t){function r(n,a){if(!s[n]){if(!i[n]){var o="function"==typeof require&&require;if(!a&&o)return o(n,!0);if(l)return l(n,!0);throw new Error("Cannot find module '"+n+"'")}var d=s[n]={exports:{}};i[n][0].call(d.exports,function(e){var s=i[n][1][e];return r(s||e)},d,d.exports,e,i,s,t)}return s[n].exports}for(var l="function"==typeof require&&require,n=0;n<t.length;n++)r(t[n]);return r}({1:[function(e,i,s){!function(i){"use strict";var s=e("./modules/slider"),t=e("./modules/signIn");e("./modules/gridAnimations")(),s(),t()}(jQuery)},{"./modules/gridAnimations":2,"./modules/signIn":3,"./modules/slider":4}],2:[function(e,i,s){i.exports=function(){function e(){s.eq(r).addClass("scaleIn"),r++,s.length!=r&&(void 0!==i&&clearTimeout(i),i=setTimeout(e,l))}var i,s=$(".product__item"),t=$(".products"),r=0,l=200;$(window).scroll(function(){$(window).scrollTop()>t.offset().top-t.innerHeight()/2&&0==r&&e()})}},{}],3:[function(e,i,s){i.exports=function(){var e=$(".signIn__form").find(".submit"),i=$(".signIn__form").find(".email"),s=$(".signIn__form").find(".error-block"),t=/^([a-zA-Z0-9_.-])+@([a-zA-Z0-9_.-])+\.([a-zA-Z])+([a-zA-Z])+/;$("form.signIn__form").submit(function(r){r.preventDefault();var l=$("input.email").val();""!=l&&t.test(l)?($(".error-block").removeClass("visible"),$(this).addClass("valid")):($(this).removeClass("valid"),$(".error-block").addClass("visible")),$(this).hasClass("valid")?$.ajax({url:"",type:"POST",data:$(this).serialize(),success:function(e){console.log("Спасибо")},error:function(s){console.log("Ошибка"),e.css("visibility","hidden"),i.css("visibility","hidden"),$(".success__send").css("visibility","visible")}}):s.addClass("visible")});var r=$(".search__input");$(".fa-search").on("click",function(){r.toggleClass("visible")})}},{}],4:[function(e,i,s){i.exports=function(){function e(e){l.attr("disabled",!0),r.attr("disabled",!0),i&&clearTimeout(i),s&&clearTimeout(s);var n=t.find(".slider__visible"),o=t.find(".slider__item"),d=t.find(".first__visible"),_=t.find(".last__visible"),v=$(d).prev(),f=$(_).next();!function(){o=t.find(".slider__item"),f.length||(f=o.eq(0)),v.length||(v=o.eq(o.length-1))}(),"right"==e.currentTarget.dataset.navigation&&(n.addClass("moveRight"),v.addClass("first__require moveRight"),$(o.eq(0)).before(o.eq(o.length-1)),i=setTimeout(function(){$(n).each(function(){$(this).removeClass("slider__visible")}),$(n).each(function(){$(this).prev().addClass("slider__visible")}),d.removeClass("first__visible"),_.removeClass("last__visible"),v.addClass("slider__visible first__visible").removeClass("first__require moveRight"),(_.prev().length?_.prev():o.eq(o.length-1)).addClass("last__visible"),n.removeClass("moveRight"),l.attr("disabled",!1),r.attr("disabled",!1)},a)),"left"==e.currentTarget.dataset.navigation&&(n.addClass("moveLeft"),f.addClass("last__require moveLeft"),$(o.eq(o.length-1)).after(o.eq(0)),s=setTimeout(function(){$(n).each(function(){$(this).removeClass("slider__visible")}),$(n).each(function(){$(this).next().addClass("slider__visible")}),_.removeClass("last__visible"),d.removeClass("first__visible"),f.addClass("slider__visible last__visible").removeClass("last__require moveLeft"),(d.next().length?d.next():o.eq(0)).addClass("first__visible"),n.removeClass("moveLeft"),l.attr("disabled",!1),r.attr("disabled",!1)},a))}var i,s,t=$(".slider"),r=t.find(".slider__previous"),l=t.find(".slider__next"),n=t.find(".slider__item").outerWidth(),a=500,o=t.find(".last__visible"),d=t.find(".first__visible");$(window).resize(function(){n=t.find(".slider__item").outerWidth(),window.innerWidth<480&&(o.removeClass("last__visible"),d.next().next().addClass("last__visible"))}),window.innerWidth<480&&(o.removeClass("last__visible"),d.next().next().addClass("last__visible")),l.on("click",e),r.on("click",e)}},{}]},{},[1]);
//# sourceMappingURL=data:application/json;base64,
