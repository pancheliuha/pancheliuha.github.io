!function i(e,t,s){function a(r,l){if(!t[r]){if(!e[r]){var o="function"==typeof require&&require;if(!l&&o)return o(r,!0);if(n)return n(r,!0);throw new Error("Cannot find module '"+r+"'")}var d=t[r]={exports:{}};e[r][0].call(d.exports,function(i){var t=e[r][1][i];return a(t?t:i)},d,d.exports,i,e,t,s)}return t[r].exports}for(var n="function"==typeof require&&require,r=0;r<s.length;r++)a(s[r]);return a}({1:[function(i,e,t){!function(e){"use strict";var t=i("./modules/slider");e(".slider").length&&t()}(jQuery)},{"./modules/slider":2}],2:[function(i,e,t){e.exports=function(){function i(i){s.attr("disabled","disabled"),t.attr("disabled","disabled"),$(".slider__item").removeClass("hovered");var r=e.find(".visible_first"),l=e.find(".visible_second"),o=e.find(".visible_third"),d=$(r).prev(),c=$(o).next();!function(){var i=e.find(".slider__item");c.length||(c=i.eq(0)),d.length||(d=i.eq(i.length-1))}(),"right"==i.currentTarget.dataset.navigation&&($(o).css("animation","scaleIn "+n+"ms").animate({right:"-200px",opacity:0},n,"linear"),setTimeout(function(){d.css({animation:"scaleOut "+n+"ms",display:"inline-block",opacity:0,position:"absolute",left:"-300px"}).animate({left:"0px",opacity:1},n,"linear",function(){r.removeClass("visible_first").addClass("visible_second"),l.removeClass("visible_second").addClass("visible_third"),o.removeClass("visible_third"),d.addClass("visible_first"),s.attr("disabled",!1),t.attr("disabled",!1),$(".slider__item").addClass("hovered")}),setTimeout(function(){r.animate({left:a},n/2,"linear"),l.css({right:a,left:"auto"}).animate({right:"0"},n/2,"linear")},n/2)},.8*n)),"left"==i.currentTarget.dataset.navigation&&($(r).css("animation","scaleIn "+n+"ms").animate({left:"-200px",opacity:0},n,"linear"),setTimeout(function(){c.css({animation:"scaleOut "+n+"ms",display:"inline-block",opacity:0,position:"absolute",left:"auto",right:"-300px"}).animate({right:"0px",opacity:1},n,"linear",function(){o.removeClass("visible_third").addClass("visible_second"),l.removeClass("visible_second").addClass("visible_first"),r.removeClass("visible_first"),c.addClass("visible_third"),s.attr("disabled",!1),t.attr("disabled",!1),$(".slider__item").addClass("hovered")}),setTimeout(function(){o.animate({right:a},n/2,"linear"),l.css({left:a,right:"auto"}).animate({left:"0"},n/2,"linear")},n/2)},.8*n))}var e=$(".slider"),t=e.find(".prev-slide"),s=e.find(".next-slide"),a=($(".slide-wrap").outerWidth()/2-83.5)/16+"rem",n=500;s.on("click",i),t.on("click",i)}},{}]},{},[1]);
//# sourceMappingURL=data:application/json;base64,
